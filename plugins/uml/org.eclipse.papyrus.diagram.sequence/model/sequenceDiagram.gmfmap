<?xml version="1.0" encoding="UTF-8"?>
<gmfmap:Mapping xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:gmfmap="http://www.eclipse.org/gmf/2008/mappings"
    xmlns:gmftool="http://www.eclipse.org/gmf/2005/ToolDefinition">
  <nodes>
    <containmentFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Package/packagedElement"/>
    <ownedChild>
      <domainMetaElement
          href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interaction"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
          <value
              body="let base : String = 'Interaction' in&#xD;&#xA;let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in &#xD;&#xA;let space : Namespace = self.namespace in&#xD;&#xA;let allMissed : Sequence(String) = suffixes->&#xD;&#xA;    select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s))&#xD;&#xA;    ) in&#xD;&#xA;let firstMissed : String = allMissed->first() in &#xD;&#xA;let noMisses : Boolean = firstMissed.oclIsUndefined() in&#xD;&#xA;let allNames : Set(String) = &#xD;&#xA;    if noMisses &#xD;&#xA;    then &#xD;&#xA;    space.member->collect(e : NamedElement | &#xD;&#xA;         if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base&#xD;&#xA;         then '' &#xD;&#xA;         else e.name &#xD;&#xA;         endif)->asSet()->excluding('') else Set{'not in use'} &#xD;&#xA;    endif in &#xD;&#xA;let longestName : String = &#xD;&#xA;    if noMisses&#xD;&#xA;    then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first() &#xD;&#xA;    else 'not in use' &#xD;&#xA;    endif in &#xD;&#xA;if noMisses then &#xD;&#xA;    if longestName.oclIsUndefined() &#xD;&#xA;    then base &#xD;&#xA;    else longestName.concat('1') &#xD;&#xA;    endif &#xD;&#xA;else &#xD;&#xA;    base.concat(firstMissed) &#xD;&#xA;endif "/>
        </initializers>
      </domainInitializer>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="sd: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="sequenceDiagram.gmfgraph#InteractionName"/>
        <features
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
      </labelMappings>
      <diagramNode
          href="sequenceDiagram.gmfgraph#InteractionNode"/>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0">
        <containmentFeature
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interaction/lifeline"/>
        <ownedChild
            relatedDiagrams="//@diagram">
          <domainMetaElement
              href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Lifeline"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
              <value
                  body="let base : String = 'Lifeline' in&#xD;&#xA;let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in &#xD;&#xA;let space : Namespace = self.namespace in&#xD;&#xA;let allMissed : Sequence(String) = suffixes->&#xD;&#xA;    select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s))&#xD;&#xA;    ) in&#xD;&#xA;let firstMissed : String = allMissed->first() in &#xD;&#xA;let noMisses : Boolean = firstMissed.oclIsUndefined() in&#xD;&#xA;let allNames : Set(String) = &#xD;&#xA;    if noMisses &#xD;&#xA;    then &#xD;&#xA;    space.member->collect(e : NamedElement | &#xD;&#xA;         if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base&#xD;&#xA;         then '' &#xD;&#xA;         else e.name &#xD;&#xA;         endif)->asSet()->excluding('') else Set{'not in use'} &#xD;&#xA;    endif in &#xD;&#xA;let longestName : String = &#xD;&#xA;    if noMisses&#xD;&#xA;    then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first() &#xD;&#xA;    else 'not in use' &#xD;&#xA;    endif in &#xD;&#xA;if noMisses then &#xD;&#xA;    if longestName.oclIsUndefined() &#xD;&#xA;    then base &#xD;&#xA;    else longestName.concat('1') &#xD;&#xA;    endif &#xD;&#xA;else &#xD;&#xA;    base.concat(firstMissed) &#xD;&#xA;endif "/>
            </initializers>
          </domainInitializer>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              viewPattern="{0}"
              editorPattern="{0}"
              editPattern="{0}">
            <diagramLabel
                href="sequenceDiagram.gmfgraph#LifelineLabel"/>
            <features
                href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
          </labelMappings>
          <tool
              xsi:type="gmftool:CreationTool"
              href="sequenceDiagram.gmftool#//@palette/@tools.0/@tools.0"/>
          <diagramNode
              href="sequenceDiagram.gmfgraph#LifelineNode"/>
          <children>
            <containmentFeature
                href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interaction/fragment"/>
            <ownedChild>
              <domainMetaElement
                  href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//ActionExecutionSpecification"/>
              <domainInitializer
                  xsi:type="gmfmap:FeatureSeqInitializer">
                <initializers
                    xsi:type="gmfmap:FeatureValueSpec">
                  <feature
                      xsi:type="ecore:EAttribute"
                      href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
                  <value
                      body="let base : String = 'ActionExecutionSpecification' in&#xD;&#xA;let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in &#xD;&#xA;let space : Namespace = self.namespace in&#xD;&#xA;let allMissed : Sequence(String) = suffixes->&#xD;&#xA;    select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s))&#xD;&#xA;    ) in&#xD;&#xA;let firstMissed : String = allMissed->first() in &#xD;&#xA;let noMisses : Boolean = firstMissed.oclIsUndefined() in&#xD;&#xA;let allNames : Set(String) = &#xD;&#xA;    if noMisses &#xD;&#xA;    then &#xD;&#xA;    space.member->collect(e : NamedElement | &#xD;&#xA;         if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base&#xD;&#xA;         then '' &#xD;&#xA;         else e.name &#xD;&#xA;         endif)->asSet()->excluding('') else Set{'not in use'} &#xD;&#xA;    endif in &#xD;&#xA;let longestName : String = &#xD;&#xA;    if noMisses&#xD;&#xA;    then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first() &#xD;&#xA;    else 'not in use' &#xD;&#xA;    endif in &#xD;&#xA;if noMisses then &#xD;&#xA;    if longestName.oclIsUndefined() &#xD;&#xA;    then base &#xD;&#xA;    else longestName.concat('1') &#xD;&#xA;    endif &#xD;&#xA;else &#xD;&#xA;    base.concat(firstMissed) &#xD;&#xA;endif "/>
                </initializers>
              </domainInitializer>
              <labelMappings
                  xsi:type="gmfmap:FeatureLabelMapping">
                <diagramLabel
                    href="sequenceDiagram.gmfgraph#ActionExecutionSpecificationLabel"/>
                <features
                    href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
              </labelMappings>
              <tool
                  xsi:type="gmftool:CreationTool"
                  href="sequenceDiagram.gmftool#//@palette/@tools.0/@tools.1"/>
              <diagramNode
                  href="sequenceDiagram.gmfgraph#ActionExecutionSpecificationNode"/>
            </ownedChild>
          </children>
          <children>
            <containmentFeature
                href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interaction/fragment"/>
            <ownedChild>
              <domainMetaElement
                  href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//BehaviorExecutionSpecification"/>
              <domainInitializer
                  xsi:type="gmfmap:FeatureSeqInitializer">
                <initializers
                    xsi:type="gmfmap:FeatureValueSpec">
                  <feature
                      xsi:type="ecore:EAttribute"
                      href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
                  <value
                      body="let base : String = 'BehaviorExecutionSpecification' in&#xD;&#xA;let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in &#xD;&#xA;let space : Namespace = self.namespace in&#xD;&#xA;let allMissed : Sequence(String) = suffixes->&#xD;&#xA;    select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s))&#xD;&#xA;    ) in&#xD;&#xA;let firstMissed : String = allMissed->first() in &#xD;&#xA;let noMisses : Boolean = firstMissed.oclIsUndefined() in&#xD;&#xA;let allNames : Set(String) = &#xD;&#xA;    if noMisses &#xD;&#xA;    then &#xD;&#xA;    space.member->collect(e : NamedElement | &#xD;&#xA;         if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base&#xD;&#xA;         then '' &#xD;&#xA;         else e.name &#xD;&#xA;         endif)->asSet()->excluding('') else Set{'not in use'} &#xD;&#xA;    endif in &#xD;&#xA;let longestName : String = &#xD;&#xA;    if noMisses&#xD;&#xA;    then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first() &#xD;&#xA;    else 'not in use' &#xD;&#xA;    endif in &#xD;&#xA;if noMisses then &#xD;&#xA;    if longestName.oclIsUndefined() &#xD;&#xA;    then base &#xD;&#xA;    else longestName.concat('1') &#xD;&#xA;    endif &#xD;&#xA;else &#xD;&#xA;    base.concat(firstMissed) &#xD;&#xA;endif "/>
                </initializers>
              </domainInitializer>
              <tool
                  xsi:type="gmftool:CreationTool"
                  href="sequenceDiagram.gmftool#//@palette/@tools.0/@tools.2"/>
              <diagramNode
                  href="sequenceDiagram.gmfgraph#BehaviourExecutionSpecification"/>
            </ownedChild>
          </children>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0">
        <containmentFeature
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interaction/fragment"/>
        <ownedChild
            relatedDiagrams="//@diagram">
          <domainMetaElement
              href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//InteractionUse"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
              <value
                  body="let base : String = 'InteractionUse' in&#xD;&#xA;let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in &#xD;&#xA;let space : Namespace = self.namespace in&#xD;&#xA;let allMissed : Sequence(String) = suffixes->&#xD;&#xA;    select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s))&#xD;&#xA;    ) in&#xD;&#xA;let firstMissed : String = allMissed->first() in &#xD;&#xA;let noMisses : Boolean = firstMissed.oclIsUndefined() in&#xD;&#xA;let allNames : Set(String) = &#xD;&#xA;    if noMisses &#xD;&#xA;    then &#xD;&#xA;    space.member->collect(e : NamedElement | &#xD;&#xA;         if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base&#xD;&#xA;         then '' &#xD;&#xA;         else e.name &#xD;&#xA;         endif)->asSet()->excluding('') else Set{'not in use'} &#xD;&#xA;    endif in &#xD;&#xA;let longestName : String = &#xD;&#xA;    if noMisses&#xD;&#xA;    then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first() &#xD;&#xA;    else 'not in use' &#xD;&#xA;    endif in &#xD;&#xA;if noMisses then &#xD;&#xA;    if longestName.oclIsUndefined() &#xD;&#xA;    then base &#xD;&#xA;    else longestName.concat('1') &#xD;&#xA;    endif &#xD;&#xA;else &#xD;&#xA;    base.concat(firstMissed) &#xD;&#xA;endif "/>
            </initializers>
          </domainInitializer>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              readOnly="true"
              viewPattern="Ref"
              editorPattern=""
              editPattern="">
            <diagramLabel
                href="sequenceDiagram.gmfgraph#InteractionUseName"/>
            <features
                href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
          </labelMappings>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              readOnly="true"
              viewPattern=""
              editorPattern="">
            <diagramLabel
                href="sequenceDiagram.gmfgraph#InteractionUseRef"/>
            <features
                href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
          </labelMappings>
          <tool
              xsi:type="gmftool:CreationTool"
              href="sequenceDiagram.gmftool#//@palette/@tools.0/@tools.3"/>
          <diagramNode
              href="sequenceDiagram.gmfgraph#InteractionUseNode"/>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0">
        <containmentFeature
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interaction/fragment"/>
        <ownedChild>
          <domainMetaElement
              href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//ConsiderIgnoreFragment"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
              <value
                  body="let base : String = 'ConsiderIgnoreFragment' in&#xD;&#xA;let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in &#xD;&#xA;let space : Namespace = self.namespace in&#xD;&#xA;let allMissed : Sequence(String) = suffixes->&#xD;&#xA;    select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s))&#xD;&#xA;    ) in&#xD;&#xA;let firstMissed : String = allMissed->first() in &#xD;&#xA;let noMisses : Boolean = firstMissed.oclIsUndefined() in&#xD;&#xA;let allNames : Set(String) = &#xD;&#xA;    if noMisses &#xD;&#xA;    then &#xD;&#xA;    space.member->collect(e : NamedElement | &#xD;&#xA;         if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base&#xD;&#xA;         then '' &#xD;&#xA;         else e.name &#xD;&#xA;         endif)->asSet()->excluding('') else Set{'not in use'} &#xD;&#xA;    endif in &#xD;&#xA;let longestName : String = &#xD;&#xA;    if noMisses&#xD;&#xA;    then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first() &#xD;&#xA;    else 'not in use' &#xD;&#xA;    endif in &#xD;&#xA;if noMisses then &#xD;&#xA;    if longestName.oclIsUndefined() &#xD;&#xA;    then base &#xD;&#xA;    else longestName.concat('1') &#xD;&#xA;    endif &#xD;&#xA;else &#xD;&#xA;    base.concat(firstMissed) &#xD;&#xA;endif "/>
            </initializers>
          </domainInitializer>
          <tool
              xsi:type="gmftool:CreationTool"
              href="sequenceDiagram.gmftool#//@palette/@tools.0/@tools.4"/>
          <diagramNode
              href="sequenceDiagram.gmfgraph#CombinedFragmentNode"/>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0">
        <containmentFeature
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interaction/fragment"/>
        <ownedChild>
          <domainMetaElement
              href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//CombinedFragment"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
              <value
                  body="let base : String = 'CombinedFragment' in&#xD;&#xA;let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in &#xD;&#xA;let space : Namespace = self.namespace in&#xD;&#xA;let allMissed : Sequence(String) = suffixes->&#xD;&#xA;    select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s))&#xD;&#xA;    ) in&#xD;&#xA;let firstMissed : String = allMissed->first() in &#xD;&#xA;let noMisses : Boolean = firstMissed.oclIsUndefined() in&#xD;&#xA;let allNames : Set(String) = &#xD;&#xA;    if noMisses &#xD;&#xA;    then &#xD;&#xA;    space.member->collect(e : NamedElement | &#xD;&#xA;         if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base&#xD;&#xA;         then '' &#xD;&#xA;         else e.name &#xD;&#xA;         endif)->asSet()->excluding('') else Set{'not in use'} &#xD;&#xA;    endif in &#xD;&#xA;let longestName : String = &#xD;&#xA;    if noMisses&#xD;&#xA;    then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first() &#xD;&#xA;    else 'not in use' &#xD;&#xA;    endif in &#xD;&#xA;if noMisses then &#xD;&#xA;    if longestName.oclIsUndefined() &#xD;&#xA;    then base &#xD;&#xA;    else longestName.concat('1') &#xD;&#xA;    endif &#xD;&#xA;else &#xD;&#xA;    base.concat(firstMissed) &#xD;&#xA;endif "/>
            </initializers>
          </domainInitializer>
          <tool
              xsi:type="gmftool:CreationTool"
              href="sequenceDiagram.gmftool#//@palette/@tools.0/@tools.4"/>
          <diagramNode
              href="sequenceDiagram.gmfgraph#CombinedFragmentNode"/>
          <children
              compartment="//@nodes.0/@ownedChild/@children.3/@ownedChild/@compartments.0"
              referencedChild="//@nodes.0/@ownedChild/@children.3/@ownedChild/@children.0/@ownedChild">
            <containmentFeature
                href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//CombinedFragment/operand"/>
            <ownedChild>
              <domainMetaElement
                  href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//InteractionOperand"/>
              <tool
                  xsi:type="gmftool:CreationTool"
                  href="sequenceDiagram.gmftool#//@palette/@tools.0/@tools.5"/>
              <diagramNode
                  href="sequenceDiagram.gmfgraph#InteractionOperandNode"/>
            </ownedChild>
          </children>
          <compartments
              children="//@nodes.0/@ownedChild/@children.3/@ownedChild/@children.0">
            <compartment
                href="sequenceDiagram.gmfgraph#CombinedFragmentCompartment"/>
          </compartments>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.0/@ownedChild/@children.0 //@nodes.0/@ownedChild/@children.1 //@nodes.0/@ownedChild/@children.2 //@nodes.0/@ownedChild/@children.3">
        <compartment
            href="sequenceDiagram.gmfgraph#InteractionCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <links
      relatedDiagrams="//@diagram">
    <domainMetaElement
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Message"/>
    <domainSpecialization
        body="self.messageSort=MessageSort::synchCall"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EAttribute"
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
        <value
            body="let base : String = 'Message' in&#xD;&#xA;let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in &#xD;&#xA;let space : Namespace = self.namespace in&#xD;&#xA;let allMissed : Sequence(String) = suffixes->&#xD;&#xA;    select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s))&#xD;&#xA;    ) in&#xD;&#xA;let firstMissed : String = allMissed->first() in &#xD;&#xA;let noMisses : Boolean = firstMissed.oclIsUndefined() in&#xD;&#xA;let allNames : Set(String) = &#xD;&#xA;    if noMisses &#xD;&#xA;    then &#xD;&#xA;    space.member->collect(e : NamedElement | &#xD;&#xA;         if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base&#xD;&#xA;         then '' &#xD;&#xA;         else e.name &#xD;&#xA;         endif)->asSet()->excluding('') else Set{'not in use'} &#xD;&#xA;    endif in &#xD;&#xA;let longestName : String = &#xD;&#xA;    if noMisses&#xD;&#xA;    then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first() &#xD;&#xA;    else 'not in use' &#xD;&#xA;    endif in &#xD;&#xA;if noMisses then &#xD;&#xA;    if longestName.oclIsUndefined() &#xD;&#xA;    then base &#xD;&#xA;    else longestName.concat('1') &#xD;&#xA;    endif &#xD;&#xA;else &#xD;&#xA;    base.concat(firstMissed) &#xD;&#xA;endif "/>
      </initializers>
    </domainInitializer>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        editorPattern=""
        editPattern="">
      <diagramLabel
          href="sequenceDiagram.gmfgraph#MessageSyncLabel"/>
      <features
          href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
    </labelMappings>
    <containmentFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interaction/message"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="sequenceDiagram.gmftool#//@palette/@tools.1/@tools.0"/>
    <diagramLink
        href="sequenceDiagram.gmfgraph#CallSynLink"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Element/owner"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Element/ownedElement"/>
    <creationConstraints>
      <sourceEnd
          body="self.oclIsKindOf(uml::ExecutionSpecification)"/>
      <targetEnd
          body="self.oclIsKindOf(uml::ExecutionSpecification) and self.oclAsType(uml::ExecutionSpecification).start = null and self.eContainer() = oppositeEnd.eContainer()"/>
    </creationConstraints>
  </links>
  <links
      relatedDiagrams="//@diagram">
    <domainMetaElement
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Message"/>
    <domainSpecialization
        body="self.messageSort=MessageSort::asynchCall or self.messageSort=MessageSort::asynchSignal"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EAttribute"
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
        <value
            body="let base : String = 'Message' in&#xD;&#xA;let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in &#xD;&#xA;let space : Namespace = self.namespace in&#xD;&#xA;let allMissed : Sequence(String) = suffixes->&#xD;&#xA;    select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s))&#xD;&#xA;    ) in&#xD;&#xA;let firstMissed : String = allMissed->first() in &#xD;&#xA;let noMisses : Boolean = firstMissed.oclIsUndefined() in&#xD;&#xA;let allNames : Set(String) = &#xD;&#xA;    if noMisses &#xD;&#xA;    then &#xD;&#xA;    space.member->collect(e : NamedElement | &#xD;&#xA;         if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base&#xD;&#xA;         then '' &#xD;&#xA;         else e.name &#xD;&#xA;         endif)->asSet()->excluding('') else Set{'not in use'} &#xD;&#xA;    endif in &#xD;&#xA;let longestName : String = &#xD;&#xA;    if noMisses&#xD;&#xA;    then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first() &#xD;&#xA;    else 'not in use' &#xD;&#xA;    endif in &#xD;&#xA;if noMisses then &#xD;&#xA;    if longestName.oclIsUndefined() &#xD;&#xA;    then base &#xD;&#xA;    else longestName.concat('1') &#xD;&#xA;    endif &#xD;&#xA;else &#xD;&#xA;    base.concat(firstMissed) &#xD;&#xA;endif "/>
      </initializers>
    </domainInitializer>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        editPattern="">
      <diagramLabel
          href="sequenceDiagram.gmfgraph#MessageAsyncLabel"/>
      <features
          href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
    </labelMappings>
    <containmentFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interaction/message"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="sequenceDiagram.gmftool#//@palette/@tools.1/@tools.1"/>
    <diagramLink
        href="sequenceDiagram.gmfgraph#CallAsyncLink"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Element/owner"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Element/ownedElement"/>
    <creationConstraints>
      <targetEnd
          body="self.eContainer() = oppositeEnd.eContainer() or self.eContainer() = oppositeEnd or self = oppositeEnd.eContainer()"/>
    </creationConstraints>
  </links>
  <links
      relatedDiagrams="//@diagram">
    <domainMetaElement
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Message"/>
    <domainSpecialization
        body="self.messageSort=MessageSort::reply"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EAttribute"
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
        <value
            body="let base : String = 'Message' in&#xD;&#xA;let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in &#xD;&#xA;let space : Namespace = self.namespace in&#xD;&#xA;let allMissed : Sequence(String) = suffixes->&#xD;&#xA;    select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s))&#xD;&#xA;    ) in&#xD;&#xA;let firstMissed : String = allMissed->first() in &#xD;&#xA;let noMisses : Boolean = firstMissed.oclIsUndefined() in&#xD;&#xA;let allNames : Set(String) = &#xD;&#xA;    if noMisses &#xD;&#xA;    then &#xD;&#xA;    space.member->collect(e : NamedElement | &#xD;&#xA;         if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base&#xD;&#xA;         then '' &#xD;&#xA;         else e.name &#xD;&#xA;         endif)->asSet()->excluding('') else Set{'not in use'} &#xD;&#xA;    endif in &#xD;&#xA;let longestName : String = &#xD;&#xA;    if noMisses&#xD;&#xA;    then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first() &#xD;&#xA;    else 'not in use' &#xD;&#xA;    endif in &#xD;&#xA;if noMisses then &#xD;&#xA;    if longestName.oclIsUndefined() &#xD;&#xA;    then base &#xD;&#xA;    else longestName.concat('1') &#xD;&#xA;    endif &#xD;&#xA;else &#xD;&#xA;    base.concat(firstMissed) &#xD;&#xA;endif "/>
      </initializers>
    </domainInitializer>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        editPattern="">
      <diagramLabel
          href="sequenceDiagram.gmfgraph#MessageReplyLabel"/>
      <features
          href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
    </labelMappings>
    <containmentFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interaction/message"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="sequenceDiagram.gmftool#//@palette/@tools.1/@tools.2"/>
    <diagramLink
        href="sequenceDiagram.gmfgraph#ReplyLink"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Element/owner"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Element/ownedElement"/>
    <creationConstraints>
      <sourceEnd
          body="self.oclIsKindOf(uml::ExecutionSpecification) and self.oclAsType(uml::ExecutionSpecification).finish = null"/>
      <targetEnd
          body="self.oclIsKindOf(uml::ExecutionSpecification) and self.eContainer() = oppositeEnd.eContainer()"/>
    </creationConstraints>
  </links>
  <links
      relatedDiagrams="//@diagram">
    <domainMetaElement
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Message"/>
    <domainSpecialization
        body="self.messageSort=MessageSort::createMessage"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EAttribute"
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
        <value
            body="let base : String = 'Message' in&#xD;&#xA;let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in &#xD;&#xA;let space : Namespace = self.namespace in&#xD;&#xA;let allMissed : Sequence(String) = suffixes->&#xD;&#xA;    select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s))&#xD;&#xA;    ) in&#xD;&#xA;let firstMissed : String = allMissed->first() in &#xD;&#xA;let noMisses : Boolean = firstMissed.oclIsUndefined() in&#xD;&#xA;let allNames : Set(String) = &#xD;&#xA;    if noMisses &#xD;&#xA;    then &#xD;&#xA;    space.member->collect(e : NamedElement | &#xD;&#xA;         if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base&#xD;&#xA;         then '' &#xD;&#xA;         else e.name &#xD;&#xA;         endif)->asSet()->excluding('') else Set{'not in use'} &#xD;&#xA;    endif in &#xD;&#xA;let longestName : String = &#xD;&#xA;    if noMisses&#xD;&#xA;    then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first() &#xD;&#xA;    else 'not in use' &#xD;&#xA;    endif in &#xD;&#xA;if noMisses then &#xD;&#xA;    if longestName.oclIsUndefined() &#xD;&#xA;    then base &#xD;&#xA;    else longestName.concat('1') &#xD;&#xA;    endif &#xD;&#xA;else &#xD;&#xA;    base.concat(firstMissed) &#xD;&#xA;endif "/>
      </initializers>
    </domainInitializer>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        editorPattern=""
        editPattern="">
      <diagramLabel
          href="sequenceDiagram.gmfgraph#MessageCreateLabel"/>
      <features
          href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
    </labelMappings>
    <containmentFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interaction/message"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="sequenceDiagram.gmftool#//@palette/@tools.1/@tools.3"/>
    <diagramLink
        href="sequenceDiagram.gmfgraph#CreateLink"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Element/owner"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Element/ownedElement"/>
    <creationConstraints>
      <sourceEnd
          body="self.oclIsKindOf(uml::ExecutionSpecification) or self.oclIsKindOf(uml::Lifeline)"/>
      <targetEnd
          body="self.oclIsKindOf(uml::Lifeline) and self.eContainer() = oppositeEnd.eContainer() and self.oclAsType(uml::Lifeline).coveredBy->select(itf : uml::InteractionFragment | itf.oclAsType(uml::MessageOccurrenceSpecification).message.messageSort = uml::MessageSort::createMessage)->isEmpty()"/>
    </creationConstraints>
  </links>
  <links
      relatedDiagrams="//@diagram">
    <domainMetaElement
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Message"/>
    <domainSpecialization
        body="self.messageSort=MessageSort::deleteMessage"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EAttribute"
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
        <value
            body="let base : String = 'Message' in&#xD;&#xA;let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in &#xD;&#xA;let space : Namespace = self.namespace in&#xD;&#xA;let allMissed : Sequence(String) = suffixes->&#xD;&#xA;    select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s))&#xD;&#xA;    ) in&#xD;&#xA;let firstMissed : String = allMissed->first() in &#xD;&#xA;let noMisses : Boolean = firstMissed.oclIsUndefined() in&#xD;&#xA;let allNames : Set(String) = &#xD;&#xA;    if noMisses &#xD;&#xA;    then &#xD;&#xA;    space.member->collect(e : NamedElement | &#xD;&#xA;         if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base&#xD;&#xA;         then '' &#xD;&#xA;         else e.name &#xD;&#xA;         endif)->asSet()->excluding('') else Set{'not in use'} &#xD;&#xA;    endif in &#xD;&#xA;let longestName : String = &#xD;&#xA;    if noMisses&#xD;&#xA;    then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first() &#xD;&#xA;    else 'not in use' &#xD;&#xA;    endif in &#xD;&#xA;if noMisses then &#xD;&#xA;    if longestName.oclIsUndefined() &#xD;&#xA;    then base &#xD;&#xA;    else longestName.concat('1') &#xD;&#xA;    endif &#xD;&#xA;else &#xD;&#xA;    base.concat(firstMissed) &#xD;&#xA;endif "/>
      </initializers>
    </domainInitializer>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        editPattern="">
      <diagramLabel
          href="sequenceDiagram.gmfgraph#MessageDeleteLabel"/>
      <features
          href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
    </labelMappings>
    <containmentFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interaction/message"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="sequenceDiagram.gmftool#//@palette/@tools.1/@tools.4"/>
    <diagramLink
        href="sequenceDiagram.gmfgraph#DeleteLink"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Element/owner"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Element/ownedElement"/>
    <creationConstraints>
      <sourceEnd
          body="self.oclIsKindOf(uml::ExecutionSpecification) or self.oclIsKindOf(uml::Lifeline)"/>
      <targetEnd
          body="self.oclIsKindOf(uml::Lifeline) and self.eContainer() = oppositeEnd.eContainer() and self.oclAsType(uml::Lifeline).coveredBy->select(itf : uml::InteractionFragment | itf.oclAsType(uml::MessageOccurrenceSpecification).message.messageSort = uml::MessageSort::deleteMessage)->isEmpty()"/>
    </creationConstraints>
  </links>
  <links
      relatedDiagrams="//@diagram">
    <domainMetaElement
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Message"/>
    <domainSpecialization
        body="self.receiveEvent=null"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EAttribute"
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
        <value
            body="let base : String = 'Message' in&#xD;&#xA;let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in &#xD;&#xA;let space : Namespace = self.namespace in&#xD;&#xA;let allMissed : Sequence(String) = suffixes->&#xD;&#xA;    select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s))&#xD;&#xA;    ) in&#xD;&#xA;let firstMissed : String = allMissed->first() in &#xD;&#xA;let noMisses : Boolean = firstMissed.oclIsUndefined() in&#xD;&#xA;let allNames : Set(String) = &#xD;&#xA;    if noMisses &#xD;&#xA;    then &#xD;&#xA;    space.member->collect(e : NamedElement | &#xD;&#xA;         if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base&#xD;&#xA;         then '' &#xD;&#xA;         else e.name &#xD;&#xA;         endif)->asSet()->excluding('') else Set{'not in use'} &#xD;&#xA;    endif in &#xD;&#xA;let longestName : String = &#xD;&#xA;    if noMisses&#xD;&#xA;    then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first() &#xD;&#xA;    else 'not in use' &#xD;&#xA;    endif in &#xD;&#xA;if noMisses then &#xD;&#xA;    if longestName.oclIsUndefined() &#xD;&#xA;    then base &#xD;&#xA;    else longestName.concat('1') &#xD;&#xA;    endif &#xD;&#xA;else &#xD;&#xA;    base.concat(firstMissed) &#xD;&#xA;endif "/>
      </initializers>
    </domainInitializer>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        editorPattern=""
        editPattern="">
      <diagramLabel
          href="sequenceDiagram.gmfgraph#MessageLostLabel"/>
      <features
          href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
    </labelMappings>
    <containmentFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interaction/message"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="sequenceDiagram.gmftool#//@palette/@tools.1/@tools.5"/>
    <diagramLink
        href="sequenceDiagram.gmfgraph#LostLink"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Element/owner"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Element/ownedElement"/>
    <creationConstraints>
      <sourceEnd
          body="self.oclIsKindOf(uml::Lifeline) or self.oclIsKindOf(uml::ExecutionSpecification)"/>
      <targetEnd
          body="self.oclIsKindOf(uml::Interaction) and self = oppositeEnd.eContainer()"/>
    </creationConstraints>
  </links>
  <links
      relatedDiagrams="//@diagram">
    <domainMetaElement
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Message"/>
    <domainSpecialization
        body="self.sendEvent=null"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EAttribute"
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
        <value
            body="let base : String = 'Message' in&#xD;&#xA;let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in &#xD;&#xA;let space : Namespace = self.namespace in&#xD;&#xA;let allMissed : Sequence(String) = suffixes->&#xD;&#xA;    select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s))&#xD;&#xA;    ) in&#xD;&#xA;let firstMissed : String = allMissed->first() in &#xD;&#xA;let noMisses : Boolean = firstMissed.oclIsUndefined() in&#xD;&#xA;let allNames : Set(String) = &#xD;&#xA;    if noMisses &#xD;&#xA;    then &#xD;&#xA;    space.member->collect(e : NamedElement | &#xD;&#xA;         if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base&#xD;&#xA;         then '' &#xD;&#xA;         else e.name &#xD;&#xA;         endif)->asSet()->excluding('') else Set{'not in use'} &#xD;&#xA;    endif in &#xD;&#xA;let longestName : String = &#xD;&#xA;    if noMisses&#xD;&#xA;    then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first() &#xD;&#xA;    else 'not in use' &#xD;&#xA;    endif in &#xD;&#xA;if noMisses then &#xD;&#xA;    if longestName.oclIsUndefined() &#xD;&#xA;    then base &#xD;&#xA;    else longestName.concat('1') &#xD;&#xA;    endif &#xD;&#xA;else &#xD;&#xA;    base.concat(firstMissed) &#xD;&#xA;endif "/>
      </initializers>
    </domainInitializer>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        editPattern="">
      <diagramLabel
          href="sequenceDiagram.gmfgraph#MessageFoundLabel"/>
      <features
          href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
    </labelMappings>
    <containmentFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Interaction/message"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="sequenceDiagram.gmftool#//@palette/@tools.1/@tools.6"/>
    <diagramLink
        href="sequenceDiagram.gmfgraph#FoundLink"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Element/owner"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Element/ownedElement"/>
    <creationConstraints>
      <sourceEnd
          body="self.oclIsKindOf(uml::Interaction)"/>
      <targetEnd
          body="(self.oclIsKindOf(uml::Lifeline) or self.oclIsKindOf(uml::ExecutionSpecification)) and self.eContainer() = oppositeEnd"/>
    </creationConstraints>
  </links>
  <diagram>
    <diagramCanvas
        href="sequenceDiagram.gmfgraph#uml"/>
    <domainModel
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#/"/>
    <domainMetaElement
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Package"/>
    <palette
        href="sequenceDiagram.gmftool#//@palette"/>
  </diagram>
</gmfmap:Mapping>
