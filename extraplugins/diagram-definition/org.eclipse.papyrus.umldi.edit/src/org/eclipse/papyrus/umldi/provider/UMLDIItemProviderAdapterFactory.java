/**
 * Copyright (c) 2014 CEA LIST.
 *  
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *  
 * Contributors:
 *  CEA LIST - Initial API and implementation
 */
package org.eclipse.papyrus.umldi.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemColorProvider;
import org.eclipse.emf.edit.provider.IItemFontProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.papyrus.umldi.util.UMLDIAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * 
 * @generated
 */
public class UMLDIItemProviderAdapterFactory extends UMLDIAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {

	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public UMLDIItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
		supportedTypes.add(IItemColorProvider.class);
		supportedTypes.add(IItemFontProvider.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.UmlStyle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected UmlStyleItemProvider umlStyleItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.UmlStyle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createUmlStyleAdapter() {
		if(umlStyleItemProvider == null) {
			umlStyleItemProvider = new UmlStyleItemProvider(this);
		}
		return umlStyleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.ClassDiagram} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ClassDiagramItemProvider classDiagramItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.ClassDiagram}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createClassDiagramAdapter() {
		if(classDiagramItemProvider == null) {
			classDiagramItemProvider = new ClassDiagramItemProvider(this);
		}
		return classDiagramItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.PackageShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PackageShapeItemProvider packageShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.PackageShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createPackageShapeAdapter() {
		if(packageShapeItemProvider == null) {
			packageShapeItemProvider = new PackageShapeItemProvider(this);
		}
		return packageShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.ConstraintShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ConstraintShapeItemProvider constraintShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.ConstraintShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createConstraintShapeAdapter() {
		if(constraintShapeItemProvider == null) {
			constraintShapeItemProvider = new ConstraintShapeItemProvider(this);
		}
		return constraintShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.AttributeCompartment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AttributeCompartmentItemProvider attributeCompartmentItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.AttributeCompartment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAttributeCompartmentAdapter() {
		if(attributeCompartmentItemProvider == null) {
			attributeCompartmentItemProvider = new AttributeCompartmentItemProvider(this);
		}
		return attributeCompartmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.PropertyLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PropertyLabelItemProvider propertyLabelItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.PropertyLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createPropertyLabelAdapter() {
		if(propertyLabelItemProvider == null) {
			propertyLabelItemProvider = new PropertyLabelItemProvider(this);
		}
		return propertyLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.OperationCompartment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected OperationCompartmentItemProvider operationCompartmentItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.OperationCompartment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createOperationCompartmentAdapter() {
		if(operationCompartmentItemProvider == null) {
			operationCompartmentItemProvider = new OperationCompartmentItemProvider(this);
		}
		return operationCompartmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.OperationLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected OperationLabelItemProvider operationLabelItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.OperationLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createOperationLabelAdapter() {
		if(operationLabelItemProvider == null) {
			operationLabelItemProvider = new OperationLabelItemProvider(this);
		}
		return operationLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.ReceptionCompartment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ReceptionCompartmentItemProvider receptionCompartmentItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.ReceptionCompartment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createReceptionCompartmentAdapter() {
		if(receptionCompartmentItemProvider == null) {
			receptionCompartmentItemProvider = new ReceptionCompartmentItemProvider(this);
		}
		return receptionCompartmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.ReceptionLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ReceptionLabelItemProvider receptionLabelItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.ReceptionLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createReceptionLabelAdapter() {
		if(receptionLabelItemProvider == null) {
			receptionLabelItemProvider = new ReceptionLabelItemProvider(this);
		}
		return receptionLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.LiteralCompartment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected LiteralCompartmentItemProvider literalCompartmentItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.LiteralCompartment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createLiteralCompartmentAdapter() {
		if(literalCompartmentItemProvider == null) {
			literalCompartmentItemProvider = new LiteralCompartmentItemProvider(this);
		}
		return literalCompartmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.PackagedElementCompartment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PackagedElementCompartmentItemProvider packagedElementCompartmentItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.PackagedElementCompartment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createPackagedElementCompartmentAdapter() {
		if(packagedElementCompartmentItemProvider == null) {
			packagedElementCompartmentItemProvider = new PackagedElementCompartmentItemProvider(this);
		}
		return packagedElementCompartmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.NameLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected NameLabelItemProvider nameLabelItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.NameLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createNameLabelAdapter() {
		if(nameLabelItemProvider == null) {
			nameLabelItemProvider = new NameLabelItemProvider(this);
		}
		return nameLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.PropertyEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PropertyEdgeItemProvider propertyEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.PropertyEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createPropertyEdgeAdapter() {
		if(propertyEdgeItemProvider == null) {
			propertyEdgeItemProvider = new PropertyEdgeItemProvider(this);
		}
		return propertyEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.ModifierLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ModifierLabelItemProvider modifierLabelItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.ModifierLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createModifierLabelAdapter() {
		if(modifierLabelItemProvider == null) {
			modifierLabelItemProvider = new ModifierLabelItemProvider(this);
		}
		return modifierLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.InstanceSpecificationEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected InstanceSpecificationEdgeItemProvider instanceSpecificationEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.InstanceSpecificationEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createInstanceSpecificationEdgeAdapter() {
		if(instanceSpecificationEdgeItemProvider == null) {
			instanceSpecificationEdgeItemProvider = new InstanceSpecificationEdgeItemProvider(this);
		}
		return instanceSpecificationEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.BodyLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BodyLabelItemProvider bodyLabelItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.BodyLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBodyLabelAdapter() {
		if(bodyLabelItemProvider == null) {
			bodyLabelItemProvider = new BodyLabelItemProvider(this);
		}
		return bodyLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.InstanceSpecificationShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected InstanceSpecificationShapeItemProvider instanceSpecificationShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.InstanceSpecificationShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createInstanceSpecificationShapeAdapter() {
		if(instanceSpecificationShapeItemProvider == null) {
			instanceSpecificationShapeItemProvider = new InstanceSpecificationShapeItemProvider(this);
		}
		return instanceSpecificationShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.SlotCompartment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SlotCompartmentItemProvider slotCompartmentItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.SlotCompartment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSlotCompartmentAdapter() {
		if(slotCompartmentItemProvider == null) {
			slotCompartmentItemProvider = new SlotCompartmentItemProvider(this);
		}
		return slotCompartmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.SlotLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SlotLabelItemProvider slotLabelItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.SlotLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSlotLabelAdapter() {
		if(slotLabelItemProvider == null) {
			slotLabelItemProvider = new SlotLabelItemProvider(this);
		}
		return slotLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.ClassShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ClassShapeItemProvider classShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.ClassShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createClassShapeAdapter() {
		if(classShapeItemProvider == null) {
			classShapeItemProvider = new ClassShapeItemProvider(this);
		}
		return classShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.InterfaceShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected InterfaceShapeItemProvider interfaceShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.InterfaceShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createInterfaceShapeAdapter() {
		if(interfaceShapeItemProvider == null) {
			interfaceShapeItemProvider = new InterfaceShapeItemProvider(this);
		}
		return interfaceShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.DataTypeShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DataTypeShapeItemProvider dataTypeShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.DataTypeShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createDataTypeShapeAdapter() {
		if(dataTypeShapeItemProvider == null) {
			dataTypeShapeItemProvider = new DataTypeShapeItemProvider(this);
		}
		return dataTypeShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.PrimitiveTypeShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PrimitiveTypeShapeItemProvider primitiveTypeShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.PrimitiveTypeShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createPrimitiveTypeShapeAdapter() {
		if(primitiveTypeShapeItemProvider == null) {
			primitiveTypeShapeItemProvider = new PrimitiveTypeShapeItemProvider(this);
		}
		return primitiveTypeShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.EnumerationShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EnumerationShapeItemProvider enumerationShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.EnumerationShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createEnumerationShapeAdapter() {
		if(enumerationShapeItemProvider == null) {
			enumerationShapeItemProvider = new EnumerationShapeItemProvider(this);
		}
		return enumerationShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.LiteralLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected LiteralLabelItemProvider literalLabelItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.LiteralLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createLiteralLabelAdapter() {
		if(literalLabelItemProvider == null) {
			literalLabelItemProvider = new LiteralLabelItemProvider(this);
		}
		return literalLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.RoleLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected RoleLabelItemProvider roleLabelItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.RoleLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createRoleLabelAdapter() {
		if(roleLabelItemProvider == null) {
			roleLabelItemProvider = new RoleLabelItemProvider(this);
		}
		return roleLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.SignalShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SignalShapeItemProvider signalShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.SignalShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSignalShapeAdapter() {
		if(signalShapeItemProvider == null) {
			signalShapeItemProvider = new SignalShapeItemProvider(this);
		}
		return signalShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.ModelShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ModelShapeItemProvider modelShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.ModelShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createModelShapeAdapter() {
		if(modelShapeItemProvider == null) {
			modelShapeItemProvider = new ModelShapeItemProvider(this);
		}
		return modelShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.ContainmentEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ContainmentEdgeItemProvider containmentEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.ContainmentEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createContainmentEdgeAdapter() {
		if(containmentEdgeItemProvider == null) {
			containmentEdgeItemProvider = new ContainmentEdgeItemProvider(this);
		}
		return containmentEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.GeneralizationEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected GeneralizationEdgeItemProvider generalizationEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.GeneralizationEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createGeneralizationEdgeAdapter() {
		if(generalizationEdgeItemProvider == null) {
			generalizationEdgeItemProvider = new GeneralizationEdgeItemProvider(this);
		}
		return generalizationEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.AssociationEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AssociationEdgeItemProvider associationEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.AssociationEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAssociationEdgeAdapter() {
		if(associationEdgeItemProvider == null) {
			associationEdgeItemProvider = new AssociationEdgeItemProvider(this);
		}
		return associationEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.MultiplicityLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected MultiplicityLabelItemProvider multiplicityLabelItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.MultiplicityLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createMultiplicityLabelAdapter() {
		if(multiplicityLabelItemProvider == null) {
			multiplicityLabelItemProvider = new MultiplicityLabelItemProvider(this);
		}
		return multiplicityLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.RealizationEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected RealizationEdgeItemProvider realizationEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.RealizationEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createRealizationEdgeAdapter() {
		if(realizationEdgeItemProvider == null) {
			realizationEdgeItemProvider = new RealizationEdgeItemProvider(this);
		}
		return realizationEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.AbstractionEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AbstractionEdgeItemProvider abstractionEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.AbstractionEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAbstractionEdgeAdapter() {
		if(abstractionEdgeItemProvider == null) {
			abstractionEdgeItemProvider = new AbstractionEdgeItemProvider(this);
		}
		return abstractionEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.DependencyEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DependencyEdgeItemProvider dependencyEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.DependencyEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createDependencyEdgeAdapter() {
		if(dependencyEdgeItemProvider == null) {
			dependencyEdgeItemProvider = new DependencyEdgeItemProvider(this);
		}
		return dependencyEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.InterfaceRealizationEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected InterfaceRealizationEdgeItemProvider interfaceRealizationEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.InterfaceRealizationEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createInterfaceRealizationEdgeAdapter() {
		if(interfaceRealizationEdgeItemProvider == null) {
			interfaceRealizationEdgeItemProvider = new InterfaceRealizationEdgeItemProvider(this);
		}
		return interfaceRealizationEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.UsageEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected UsageEdgeItemProvider usageEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.UsageEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createUsageEdgeAdapter() {
		if(usageEdgeItemProvider == null) {
			usageEdgeItemProvider = new UsageEdgeItemProvider(this);
		}
		return usageEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.ElementImportEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ElementImportEdgeItemProvider elementImportEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.ElementImportEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createElementImportEdgeAdapter() {
		if(elementImportEdgeItemProvider == null) {
			elementImportEdgeItemProvider = new ElementImportEdgeItemProvider(this);
		}
		return elementImportEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.PackageImportEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PackageImportEdgeItemProvider packageImportEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.PackageImportEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createPackageImportEdgeAdapter() {
		if(packageImportEdgeItemProvider == null) {
			packageImportEdgeItemProvider = new PackageImportEdgeItemProvider(this);
		}
		return packageImportEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.PackageMergeEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PackageMergeEdgeItemProvider packageMergeEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.PackageMergeEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createPackageMergeEdgeAdapter() {
		if(packageMergeEdgeItemProvider == null) {
			packageMergeEdgeItemProvider = new PackageMergeEdgeItemProvider(this);
		}
		return packageMergeEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.SubstitutionEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SubstitutionEdgeItemProvider substitutionEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.SubstitutionEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSubstitutionEdgeAdapter() {
		if(substitutionEdgeItemProvider == null) {
			substitutionEdgeItemProvider = new SubstitutionEdgeItemProvider(this);
		}
		return substitutionEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.InformationFlowEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected InformationFlowEdgeItemProvider informationFlowEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.InformationFlowEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createInformationFlowEdgeAdapter() {
		if(informationFlowEdgeItemProvider == null) {
			informationFlowEdgeItemProvider = new InformationFlowEdgeItemProvider(this);
		}
		return informationFlowEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.ItemLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ItemLabelItemProvider itemLabelItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.ItemLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createItemLabelAdapter() {
		if(itemLabelItemProvider == null) {
			itemLabelItemProvider = new ItemLabelItemProvider(this);
		}
		return itemLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.AssociationClassEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AssociationClassEdgeItemProvider associationClassEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.AssociationClassEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAssociationClassEdgeAdapter() {
		if(associationClassEdgeItemProvider == null) {
			associationClassEdgeItemProvider = new AssociationClassEdgeItemProvider(this);
		}
		return associationClassEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.GeneralizationSetEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected GeneralizationSetEdgeItemProvider generalizationSetEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.GeneralizationSetEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createGeneralizationSetEdgeAdapter() {
		if(generalizationSetEdgeItemProvider == null) {
			generalizationSetEdgeItemProvider = new GeneralizationSetEdgeItemProvider(this);
		}
		return generalizationSetEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.PowerLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PowerLabelItemProvider powerLabelItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.PowerLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createPowerLabelAdapter() {
		if(powerLabelItemProvider == null) {
			powerLabelItemProvider = new PowerLabelItemProvider(this);
		}
		return powerLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.CommentShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CommentShapeItemProvider commentShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.CommentShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createCommentShapeAdapter() {
		if(commentShapeItemProvider == null) {
			commentShapeItemProvider = new CommentShapeItemProvider(this);
		}
		return commentShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.AttachmentEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AttachmentEdgeItemProvider attachmentEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.AttachmentEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAttachmentEdgeAdapter() {
		if(attachmentEdgeItemProvider == null) {
			attachmentEdgeItemProvider = new AttachmentEdgeItemProvider(this);
		}
		return attachmentEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.AssociationClassShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AssociationClassShapeItemProvider associationClassShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.AssociationClassShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAssociationClassShapeAdapter() {
		if(associationClassShapeItemProvider == null) {
			associationClassShapeItemProvider = new AssociationClassShapeItemProvider(this);
		}
		return associationClassShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.ComponentShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ComponentShapeItemProvider componentShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.ComponentShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createComponentShapeAdapter() {
		if(componentShapeItemProvider == null) {
			componentShapeItemProvider = new ComponentShapeItemProvider(this);
		}
		return componentShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.InformationItemShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected InformationItemShapeItemProvider informationItemShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.InformationItemShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createInformationItemShapeAdapter() {
		if(informationItemShapeItemProvider == null) {
			informationItemShapeItemProvider = new InformationItemShapeItemProvider(this);
		}
		return informationItemShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.RepresentationEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected RepresentationEdgeItemProvider representationEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.RepresentationEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createRepresentationEdgeAdapter() {
		if(representationEdgeItemProvider == null) {
			representationEdgeItemProvider = new RepresentationEdgeItemProvider(this);
		}
		return representationEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.AssociationShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AssociationShapeItemProvider associationShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.AssociationShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAssociationShapeAdapter() {
		if(associationShapeItemProvider == null) {
			associationShapeItemProvider = new AssociationShapeItemProvider(this);
		}
		return associationShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.DependencyShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DependencyShapeItemProvider dependencyShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.DependencyShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createDependencyShapeAdapter() {
		if(dependencyShapeItemProvider == null) {
			dependencyShapeItemProvider = new DependencyShapeItemProvider(this);
		}
		return dependencyShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.TimeObservationShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected TimeObservationShapeItemProvider timeObservationShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.TimeObservationShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createTimeObservationShapeAdapter() {
		if(timeObservationShapeItemProvider == null) {
			timeObservationShapeItemProvider = new TimeObservationShapeItemProvider(this);
		}
		return timeObservationShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.DurationObservationShape} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DurationObservationShapeItemProvider durationObservationShapeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.DurationObservationShape}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createDurationObservationShapeAdapter() {
		if(durationObservationShapeItemProvider == null) {
			durationObservationShapeItemProvider = new DurationObservationShapeItemProvider(this);
		}
		return durationObservationShapeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.TemplateParameterCompartment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected TemplateParameterCompartmentItemProvider templateParameterCompartmentItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.TemplateParameterCompartment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createTemplateParameterCompartmentAdapter() {
		if(templateParameterCompartmentItemProvider == null) {
			templateParameterCompartmentItemProvider = new TemplateParameterCompartmentItemProvider(this);
		}
		return templateParameterCompartmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.umldi.TemplateParameterLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected TemplateParameterLabelItemProvider templateParameterLabelItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.umldi.TemplateParameterLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createTemplateParameterLabelAdapter() {
		if(templateParameterLabelItemProvider == null) {
			templateParameterLabelItemProvider = new TemplateParameterLabelItemProvider(this);
		}
		return templateParameterLabelItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if(isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if(!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}
		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);
		if(parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void dispose() {
		if(umlStyleItemProvider != null)
			umlStyleItemProvider.dispose();
		if(packagedElementCompartmentItemProvider != null)
			packagedElementCompartmentItemProvider.dispose();
		if(packageShapeItemProvider != null)
			packageShapeItemProvider.dispose();
		if(nameLabelItemProvider != null)
			nameLabelItemProvider.dispose();
		if(templateParameterCompartmentItemProvider != null)
			templateParameterCompartmentItemProvider.dispose();
		if(templateParameterLabelItemProvider != null)
			templateParameterLabelItemProvider.dispose();
		if(classDiagramItemProvider != null)
			classDiagramItemProvider.dispose();
		if(constraintShapeItemProvider != null)
			constraintShapeItemProvider.dispose();
		if(bodyLabelItemProvider != null)
			bodyLabelItemProvider.dispose();
		if(attributeCompartmentItemProvider != null)
			attributeCompartmentItemProvider.dispose();
		if(propertyLabelItemProvider != null)
			propertyLabelItemProvider.dispose();
		if(operationCompartmentItemProvider != null)
			operationCompartmentItemProvider.dispose();
		if(operationLabelItemProvider != null)
			operationLabelItemProvider.dispose();
		if(receptionCompartmentItemProvider != null)
			receptionCompartmentItemProvider.dispose();
		if(receptionLabelItemProvider != null)
			receptionLabelItemProvider.dispose();
		if(literalCompartmentItemProvider != null)
			literalCompartmentItemProvider.dispose();
		if(enumerationShapeItemProvider != null)
			enumerationShapeItemProvider.dispose();
		if(literalLabelItemProvider != null)
			literalLabelItemProvider.dispose();
		if(roleLabelItemProvider != null)
			roleLabelItemProvider.dispose();
		if(associationEdgeItemProvider != null)
			associationEdgeItemProvider.dispose();
		if(multiplicityLabelItemProvider != null)
			multiplicityLabelItemProvider.dispose();
		if(propertyEdgeItemProvider != null)
			propertyEdgeItemProvider.dispose();
		if(modifierLabelItemProvider != null)
			modifierLabelItemProvider.dispose();
		if(generalizationSetEdgeItemProvider != null)
			generalizationSetEdgeItemProvider.dispose();
		if(powerLabelItemProvider != null)
			powerLabelItemProvider.dispose();
		if(instanceSpecificationEdgeItemProvider != null)
			instanceSpecificationEdgeItemProvider.dispose();
		if(instanceSpecificationShapeItemProvider != null)
			instanceSpecificationShapeItemProvider.dispose();
		if(slotCompartmentItemProvider != null)
			slotCompartmentItemProvider.dispose();
		if(slotLabelItemProvider != null)
			slotLabelItemProvider.dispose();
		if(classShapeItemProvider != null)
			classShapeItemProvider.dispose();
		if(interfaceShapeItemProvider != null)
			interfaceShapeItemProvider.dispose();
		if(dataTypeShapeItemProvider != null)
			dataTypeShapeItemProvider.dispose();
		if(primitiveTypeShapeItemProvider != null)
			primitiveTypeShapeItemProvider.dispose();
		if(signalShapeItemProvider != null)
			signalShapeItemProvider.dispose();
		if(modelShapeItemProvider != null)
			modelShapeItemProvider.dispose();
		if(containmentEdgeItemProvider != null)
			containmentEdgeItemProvider.dispose();
		if(generalizationEdgeItemProvider != null)
			generalizationEdgeItemProvider.dispose();
		if(realizationEdgeItemProvider != null)
			realizationEdgeItemProvider.dispose();
		if(abstractionEdgeItemProvider != null)
			abstractionEdgeItemProvider.dispose();
		if(dependencyEdgeItemProvider != null)
			dependencyEdgeItemProvider.dispose();
		if(interfaceRealizationEdgeItemProvider != null)
			interfaceRealizationEdgeItemProvider.dispose();
		if(usageEdgeItemProvider != null)
			usageEdgeItemProvider.dispose();
		if(elementImportEdgeItemProvider != null)
			elementImportEdgeItemProvider.dispose();
		if(packageImportEdgeItemProvider != null)
			packageImportEdgeItemProvider.dispose();
		if(packageMergeEdgeItemProvider != null)
			packageMergeEdgeItemProvider.dispose();
		if(substitutionEdgeItemProvider != null)
			substitutionEdgeItemProvider.dispose();
		if(informationFlowEdgeItemProvider != null)
			informationFlowEdgeItemProvider.dispose();
		if(itemLabelItemProvider != null)
			itemLabelItemProvider.dispose();
		if(associationClassEdgeItemProvider != null)
			associationClassEdgeItemProvider.dispose();
		if(commentShapeItemProvider != null)
			commentShapeItemProvider.dispose();
		if(attachmentEdgeItemProvider != null)
			attachmentEdgeItemProvider.dispose();
		if(associationClassShapeItemProvider != null)
			associationClassShapeItemProvider.dispose();
		if(componentShapeItemProvider != null)
			componentShapeItemProvider.dispose();
		if(informationItemShapeItemProvider != null)
			informationItemShapeItemProvider.dispose();
		if(representationEdgeItemProvider != null)
			representationEdgeItemProvider.dispose();
		if(associationShapeItemProvider != null)
			associationShapeItemProvider.dispose();
		if(dependencyShapeItemProvider != null)
			dependencyShapeItemProvider.dispose();
		if(timeObservationShapeItemProvider != null)
			timeObservationShapeItemProvider.dispose();
		if(durationObservationShapeItemProvider != null)
			durationObservationShapeItemProvider.dispose();
	}
}
