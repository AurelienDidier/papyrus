/**
 * Copyright (c) 2014 CEA LIST.
 *  
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *  
 * Contributors:
 *  CEA LIST - Initial API and implementation
 */
import org.eclipse.papyrus.umldi2dg.UtilitiesLibrary;

modeltype DC uses "http://www.omg.org/spec/DD/20110901/DC";
modeltype DG uses "http://www.omg.org/spec/DD/20110901/DG";
modeltype DI uses "http://www.omg.org/spec/DD/20110901/DI";
modeltype UMLDI uses "http://www.omg.org/spec/UML/20131001/UMLDI";
modeltype UML uses "http://www.eclipse.org/uml2/4.0.0/UML";

library umldefinitions;

property openArrow : DG::Marker = object DG::Marker {
	id := "openArrow";
	size := object DC::Dimension { width := 12; height := 10; };
	reference := object DC::Point { x := 12; y := 5; };
	member := object DG::Polyline {
		point += object DC::Point { x := 0; y := 0; };
		point += object DC::Point { x := 12; y := 5; };
		point += object DC::Point { x := 0; y := 10; };
	}
};	

property closedArrow : DG::Marker = object DG::Marker {
	id := "closedArrow";
	size := object DC::Dimension { width := 12; height := 10; };
	reference := object DC::Point { x := 12; y := 5; };
	member := object DG::Polygon {
		point += object DC::Point { x := 1; y := 1; };
		point += object DC::Point { x := 11; y := 5; };
		point += object DC::Point { x := 1; y := 9; };
		style := object DG::Style { fill := object DG::Paint { color := createColor('#FFFFFF') } };
	}
};	

property umlDefinitions : DG::Definitions = object DG::Definitions {
	styleSheet := object DG::StyleSheet {
		rule += object DG::StyleRule {
			selector := object DG::StyleSelector {
				kind := DG::ElementKind::canvas;
			};
			style := object DG::Style {
				fill := null;
				stroke := object DG::Paint {
					color := createColor('#000000');
				};
			};
		};
		rule += object DG::StyleRule {
			selector := object DG::StyleSelector {
				kind := DG::ElementKind::text;
			};
			style := object DG::Style {
				stroke := null;
				fill := object DG::Paint {
					color := createColor('#000000');
				};
			};
		};
	};
	defnition += openArrow;
	defnition += closedArrow;
};
