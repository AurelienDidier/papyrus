/*
* generated by Xtext
*/
package org.eclipse.papyrus.marte.vsl.ui.contentassist;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.jface.text.contentassist.CompletionProposal;
import org.eclipse.jface.text.contentassist.ICompletionProposal;
import org.eclipse.jface.viewers.ILabelProvider;
import org.eclipse.papyrus.core.utils.DisplayUtils;
import org.eclipse.papyrus.marte.vsl.extensions.VSLContextUtil;
import org.eclipse.papyrus.marte.vsl.extensions.VSLTypeInferenceUtil;
import org.eclipse.papyrus.marte.vsl.vSL.DataTypeName;
import org.eclipse.papyrus.marte.vsl.vSL.DurationObsName;
import org.eclipse.papyrus.marte.vsl.vSL.InstantObsName;
import org.eclipse.papyrus.marte.vsl.vSL.ListOfValueNamePairs;
import org.eclipse.papyrus.marte.vsl.vSL.NameOrChoiceOrBehaviorCall;
import org.eclipse.papyrus.marte.vsl.vSL.OperationCallExpression;
import org.eclipse.papyrus.marte.vsl.vSL.PrimaryExpression;
import org.eclipse.papyrus.marte.vsl.vSL.PropertyCallExpression;
import org.eclipse.papyrus.marte.vsl.vSL.QualifiedName;
import org.eclipse.papyrus.marte.vsl.vSL.ValueNamePair;
import org.eclipse.papyrus.marte.vsl.vSL.ValueSpecification;
import org.eclipse.papyrus.marte.vsl.validation.VSLJavaValidator;
import org.eclipse.uml2.uml.Classifier;
import org.eclipse.uml2.uml.DataType;
import org.eclipse.uml2.uml.DurationObservation;
import org.eclipse.uml2.uml.Element;
import org.eclipse.uml2.uml.Enumeration;
import org.eclipse.uml2.uml.EnumerationLiteral;
import org.eclipse.uml2.uml.NamedElement;
import org.eclipse.uml2.uml.Namespace;
import org.eclipse.uml2.uml.Operation;
import org.eclipse.uml2.uml.Package;
import org.eclipse.uml2.uml.Property;
import org.eclipse.uml2.uml.TimeObservation;
import org.eclipse.uml2.uml.Type;
import org.eclipse.uml2.uml.TypedElement;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;


/**
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on how to customize content assistant
 */
public class VSLProposalProvider extends AbstractVSLProposalProvider {

	private ILabelProvider labelProvider = DisplayUtils.getLabelProvider() ;

	protected ICompletionProposal createCompletionProposal( 
			String completionString, 
			String displayString, 
			ContentAssistContext context) {

		ICompletionProposal completionProposal = new CompletionProposal(completionString, 	// String to be inserted 
				context.getOffset(),  							// Offset
				context.getSelectedText().length(),				// Replacement length
				completionString.length(),						// cursorPosition
				null	,	// image
				" " + displayString,									// displayString
				null							,				// contextInformation
				""							// additionalProposalInfo
		);
		return completionProposal ;
	}
	
	/**
	 * Private Utility method for creating a completion proposal with replacement of prefix
	 * 
	 * @param namedElement The named element for which completion proposal must be created
	 * @param completionString The actual completion string
	 * @param displayString The way the completion is displayed in the completion list
	 * @param context Some information related to the context of the completion
	 * @return
	 */
	protected ICompletionProposal createCompletionProposalWithReplacementOfPrefix(NamedElement namedElement, 
														String completionString, 
														String displayString, 
														ContentAssistContext context) {
		String additionalProposalInfo = "" + namedElement.getQualifiedName() + "\n" + '(' + namedElement.eClass().getName() + ')' ;
		
		ICompletionProposal completionProposal = new CompletionProposal(completionString, 	// String to be inserted 
				context.getOffset() - context.getPrefix().length(),  							// Offset
				context.getPrefix().length(),				// Replacement length
				completionString.length(),						// cursorPosition
				labelProvider.getImage(namedElement)	,	// image
				" " + displayString,									// displayString
				null							,				// contextInformation
				additionalProposalInfo							// additionalProposalInfo
				);
		return completionProposal ;
	}
	
	@Override
	public void completeExpression_Exp(EObject model, Assignment assignment,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeExpression_Exp(model, assignment, context, acceptor);
	}

	@Override
	public void completeAndOrXorExpression_Exp(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeAndOrXorExpression_Exp(model, assignment, context, acceptor);
	}

	@Override
	public void completeAndOrXorExpression_Op(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		//super.completeAndOrXorExpression_Op(model, assignment, context, acceptor);
	}

	@Override
	public void completeEqualityExpression_Exp(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeEqualityExpression_Exp(model, assignment, context, acceptor);
	}

	@Override
	public void completeEqualityExpression_Op(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		//super.completeEqualityExpression_Op(model, assignment, context, acceptor);
	}

	@Override
	public void completeRelationalExpression_Exp(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeRelationalExpression_Exp(model, assignment, context, acceptor);
	}

	@Override
	public void completeRelationalExpression_Op(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		//super.completeRelationalExpression_Op(model, assignment, context, acceptor);
	}

	@Override
	public void completeConditionalExpression_Exp(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeConditionalExpression_Exp(model, assignment, context, acceptor);
	}

	@Override
	public void completeConditionalExpression_Op(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		//super.completeConditionalExpression_Op(model, assignment, context, acceptor);
	}

	@Override
	public void completeAdditiveExpression_Exp(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeAdditiveExpression_Exp(model, assignment, context, acceptor);
	}

	@Override
	public void completeAdditiveExpression_Op(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		//super.completeAdditiveExpression_Op(model, assignment, context, acceptor);
	}

	@Override
	public void completeMultiplicativeExpression_Exp(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeMultiplicativeExpression_Exp(model, assignment, context, acceptor);
	}

	@Override
	public void completeMultiplicativeExpression_Op(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		//super.completeMultiplicativeExpression_Op(model, assignment, context, acceptor);
	}

	@Override
	public void completeUnaryExpression_Op(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		//super.completeUnaryExpression_Op(model, assignment, context, acceptor);
	}

	@Override
	public void completeUnaryExpression_Unary(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeUnaryExpression_Unary(model, assignment, context, acceptor);
	}

	@Override
	public void completeUnaryExpression_Exp(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeUnaryExpression_Exp(model, assignment, context, acceptor);
	}

	@Override
	public void completePrimaryExpression_Prefix(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completePrimaryExpression_Prefix(model, assignment, context, acceptor);
	}

	@Override
	public void completePrimaryExpression_Suffix(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completePrimaryExpression_Suffix(model, assignment, context, acceptor);
	}

	@Override
	public void completePropertyCallExpression_Property(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completePropertyCallExpression_Property(model, assignment, context,
				acceptor);
	}

	@Override
	public void completePropertyCallExpression_Suffix(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completePropertyCallExpression_Suffix(model, assignment, context,
				acceptor);
	}

	@Override
	public void completeOperationCallExpression_Operation(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeOperationCallExpression_Operation(model, assignment, context,
				acceptor);
	}

	@Override
	public void completeOperationCallExpression_Arguments(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeOperationCallExpression_Arguments(model, assignment, context,
				acceptor);
	}

	@Override
	public void completeOperationCallExpression_Suffix(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeOperationCallExpression_Suffix(model, assignment, context,
				acceptor);
	}

	@Override
	public void completeNameOrChoiceOrBehaviorCall_Path(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeNameOrChoiceOrBehaviorCall_Path(model, assignment, context,
				acceptor);
	}

	@Override
	public void completeNameOrChoiceOrBehaviorCall_Id(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeNameOrChoiceOrBehaviorCall_Id(model, assignment, context,
				acceptor);
	}

	@Override
	public void completeNameOrChoiceOrBehaviorCall_Arguments(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeNameOrChoiceOrBehaviorCall_Arguments(model, assignment, context,
				acceptor);
	}

	@Override
	public void completeQualifiedName_Path(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeQualifiedName_Path(model, assignment, context, acceptor);
	}

	@Override
	public void completeQualifiedName_Remaining(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeQualifiedName_Remaining(model, assignment, context, acceptor);
	}

	@Override
	public void completeInterval_IsLowerIncluded(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		//super.completeInterval_IsLowerIncluded(model, assignment, context, acceptor);
	}

	@Override
	public void completeInterval_Lower(EObject model, Assignment assignment,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeInterval_Lower(model, assignment, context, acceptor);
	}

	@Override
	public void completeInterval_Upper(EObject model, Assignment assignment,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeInterval_Upper(model, assignment, context, acceptor);
	}

	@Override
	public void completeInterval_IsUpperIncluded(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		//super.completeInterval_IsUpperIncluded(model, assignment, context, acceptor);
	}

	@Override
	public void completeCollectionOrTuple_ListOfValues(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeCollectionOrTuple_ListOfValues(model, assignment, context,
				acceptor);
	}

	@Override
	public void completeTuple_ListOfValueNamePairs(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeTuple_ListOfValueNamePairs(model, assignment, context, acceptor);
	}

	@Override
	public void completeListOfValues_Values(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeListOfValues_Values(model, assignment, context, acceptor);
	}

	@Override
	public void completeListOfValueNamePairs_ValueNamePairs(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeListOfValueNamePairs_ValueNamePairs(model, assignment, context,
				acceptor);
	}

	@Override
	public void completeValueNamePair_Property(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeValueNamePair_Property(model, assignment, context, acceptor);
	}

	@Override
	public void completeValueNamePair_Value(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		if (model == null || !(model instanceof ValueNamePair))
			return ;
		ValueNamePair valueNamePairRuleRule = (ValueNamePair)model ;
		
		if (valueNamePairRuleRule.getProperty() == null || valueNamePairRuleRule.getProperty().getType() == null)
			return ;
		
		Property p = valueNamePairRuleRule.getProperty() ;
		
		Map<String,Element> allProposals = ProposalUtils.buildProposalForType((Classifier)p.getType()) ;
		for (String s : allProposals.keySet()) {
			String completionString = s.substring(context.getPrefix().length()) ;
			String displayString = s ;
			ICompletionProposal completionProposal = null ;
			if (allProposals.get(s) == null) {
				completionString = s.substring(context.getPrefix().length()) ;
				displayString = s ;
				completionProposal = createCompletionProposal(completionString, displayString, context) ;
			}
			else {
				completionString = s ;
				displayString = s ;
				completionProposal = createCompletionProposalWithReplacementOfPrefix((NamedElement)allProposals.get(s), completionString, displayString, context) ;
			}
			acceptor.accept(completionProposal) ;
		}
	}

	@Override
	public void completeInstantObsExpression_Id(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeInstantObsExpression_Id(model, assignment, context, acceptor);
	}

	@Override
	public void completeInstantObsExpression_Index(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeInstantObsExpression_Index(model, assignment, context, acceptor);
	}

	@Override
	public void completeInstantObsExpression_Condition(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeInstantObsExpression_Condition(model, assignment, context,
				acceptor);
	}

	@Override
	public void completeInstantObsName_Path(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeInstantObsName_Path(model, assignment, context, acceptor);
	}

	@Override
	public void completeInstantObsName_InstantId(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeInstantObsName_InstantId(model, assignment, context, acceptor);
	}

	@Override
	public void completeDurationObsExpression_Id(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeDurationObsExpression_Id(model, assignment, context, acceptor);
	}

	@Override
	public void completeDurationObsExpression_Index(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeDurationObsExpression_Index(model, assignment, context, acceptor);
	}

	@Override
	public void completeDurationObsExpression_Condition(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeDurationObsExpression_Condition(model, assignment, context,
				acceptor);
	}

	@Override
	public void completeDurationObsName_Path(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeDurationObsName_Path(model, assignment, context, acceptor);
	}

	@Override
	public void completeDurationObsName_DurationId(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeDurationObsName_DurationId(model, assignment, context, acceptor);
	}

	@Override
	public void completeJitterExp_FirstInstant(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeJitterExp_FirstInstant(model, assignment, context, acceptor);
	}

	@Override
	public void completeJitterExp_SecondInstant(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeJitterExp_SecondInstant(model, assignment, context, acceptor);
	}

	@Override
	public void completeVariableDeclaration_VariableDeclaration(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeVariableDeclaration_VariableDeclaration(model, assignment,
				context, acceptor);
	}

	@Override
	public void completeVariableDeclaration_Name(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeVariableDeclaration_Name(model, assignment, context, acceptor);
	}

	@Override
	public void completeVariableDeclaration_Type(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeVariableDeclaration_Type(model, assignment, context, acceptor);
	}

	@Override
	public void completeVariableDeclaration_InitValue(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeVariableDeclaration_InitValue(model, assignment, context,
				acceptor);
	}

	@Override
	public void completeDataTypeName_Path(EObject model, Assignment assignment,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeDataTypeName_Path(model, assignment, context, acceptor);
	}

	@Override
	public void completeDataTypeName_Type(EObject model, Assignment assignment,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeDataTypeName_Type(model, assignment, context, acceptor);
	}

	@Override
	public void completeIntegerLiteralRule_Value(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeIntegerLiteralRule_Value(model, assignment, context, acceptor);
	}

	@Override
	public void completeUnlimitedLiteralRule_Value(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeUnlimitedLiteralRule_Value(model, assignment, context, acceptor);
	}

	@Override
	public void completeRealLiteralRule_Value(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeRealLiteralRule_Value(model, assignment, context, acceptor);
	}

	@Override
	public void completeDateTimeLiteralRule_Value(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeDateTimeLiteralRule_Value(model, assignment, context, acceptor);
	}

	@Override
	public void completeBooleanLiteralRule_Value(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeBooleanLiteralRule_Value(model, assignment, context, acceptor);
	}

	@Override
	public void completeNullLiteralRule_Value(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeNullLiteralRule_Value(model, assignment, context, acceptor);
	}

	@Override
	public void completeDefaultLiteralRule_Value(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeDefaultLiteralRule_Value(model, assignment, context, acceptor);
	}

	@Override
	public void completeStringLiteralRule_Value(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.completeStringLiteralRule_Value(model, assignment, context, acceptor);
	}

	@Override
	public void complete_Expression(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_Expression(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_AndOrXorExpression(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_AndOrXorExpression(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_EqualityExpression(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_EqualityExpression(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_RelationalExpression(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_RelationalExpression(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_ConditionalExpression(EObject model,
			RuleCall ruleCall, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_ConditionalExpression(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_AdditiveExpression(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_AdditiveExpression(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_MultiplicativeExpression(EObject model,
			RuleCall ruleCall, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_MultiplicativeExpression(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_UnaryExpression(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_UnaryExpression(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_PrimaryExpression(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_PrimaryExpression(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_ValueSpecification(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_ValueSpecification(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_SuffixExpression(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_SuffixExpression(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_PropertyCallExpression(EObject model,
			RuleCall ruleCall, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_PropertyCallExpression(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_OperationCallExpression(EObject model,
			RuleCall ruleCall, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_OperationCallExpression(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_Literal(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_Literal(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_NameOrChoiceOrBehaviorCall(EObject model,
			RuleCall ruleCall, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_NameOrChoiceOrBehaviorCall(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_QualifiedName(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_QualifiedName(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_Interval(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_Interval(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_CollectionOrTuple(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_CollectionOrTuple(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_Tuple(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_Tuple(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_ListOfValues(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_ListOfValues(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_ListOfValueNamePairs(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_ListOfValueNamePairs(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_ValueNamePair(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_ValueNamePair(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_TimeExpression(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_TimeExpression(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_InstantObsExpression(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_InstantObsExpression(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_InstantObsName(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_InstantObsName(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_DurationObsExpression(EObject model,
			RuleCall ruleCall, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_DurationObsExpression(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_DurationObsName(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_DurationObsName(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_JitterExp(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_JitterExp(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_VariableDeclaration(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_VariableDeclaration(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_VariableDirectionKind(EObject model,
			RuleCall ruleCall, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_VariableDirectionKind(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_DataTypeName(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_DataTypeName(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_NumberLiteralRule(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_NumberLiteralRule(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_IntegerLiteralRule(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_IntegerLiteralRule(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_IntegerLiteral(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_IntegerLiteral(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_UnlimitedLiteralRule(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_UnlimitedLiteralRule(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_RealLiteralRule(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_RealLiteralRule(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_RealLiteral(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_RealLiteral(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_DateTimeLiteralRule(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_DateTimeLiteralRule(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_DateTimeLiteral(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_DateTimeLiteral(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_BooleanLiteralRule(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_BooleanLiteralRule(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_BooleanLiteral(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_BooleanLiteral(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_NullLiteralRule(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_NullLiteralRule(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_NullLiteral(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_NullLiteral(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_DefaultLiteralRule(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_DefaultLiteralRule(model, ruleCall, context, acceptor);
	}

	@Override
	public void complete_StringLiteralRule(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_StringLiteralRule(model, ruleCall, context, acceptor);
	}
	
	
	
}
