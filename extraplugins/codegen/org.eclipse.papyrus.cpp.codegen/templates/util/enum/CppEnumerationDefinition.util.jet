<%@ jet package		=	"org.eclipse.papyrus.cpp.codegen.jet.util" 
	skeleton        =   "../../generator.skeleton" 
	imports			=	"org.eclipse.uml2.uml.Enumeration org.eclipse.uml2.uml.EnumerationLiteral org.eclipse.papyrus.cpp.codegen.jet.doc.* java.util.Iterator org.eclipse.papyrus.cpp.codegen.utils.GenUtils Cpp.*" 
	class			=	"CppEnumerationDefinition" 
%>
<%
//////////////////////////////////////////////////////////////////////////////////////////
// Java preparation
//////////////////////////////////////////////////////////////////////////////////////////
	
	// This is an util template to prepare Enumeration definition
	/////////////////////////////////////////////////////////////


	// Retrieve the enumeration
	Enumeration currentEnumeration = (Enumeration) argument;
	
	// Get the package name
	String enumName			= currentEnumeration.getName();
	
	// Doc
	String enumDoc			= "";
	String enumLitDoc		= "";
	
	// Retrieve enum doc
	CppElementDoc jDoc		= new CppElementDoc();
	enumDoc					= jDoc.generate(currentEnumeration);
	
	// Retrieve literals
	String enumLiterals	= "";
	
	Iterator<EnumerationLiteral> literalsIt = currentEnumeration.getOwnedLiterals().iterator();
	
	while (literalsIt.hasNext()) {
		
		// retrieve current 
		EnumerationLiteral currentLiteral = literalsIt.next();
		
		enumLiterals = enumLiterals+currentLiteral.getName();
		
		// if current literal is initialised
		CppInit cppInit = GenUtils.getApplication(currentLiteral, CppInit.class);
		if (cppInit != null) {
			// Add the initialisation value
			int initValue = cppInit.getValue();
			enumLiterals = enumLiterals + " = " + initValue;
		}
		
		// Retrieve doc
		if (!GenUtils.getComments(currentLiteral).equals("")) {
			enumLitDoc = " //< "+GenUtils.getComments(currentLiteral);
		} else {
			enumLitDoc = "";
		}
			
		// if more literal left prepare new line for next literal
		if (literalsIt.hasNext()) {
			enumLiterals	= enumLiterals+" ,"+enumLitDoc+NL+"\t";
		} else {
			enumLiterals	= enumLiterals+enumLitDoc;
		}
	}
	
		
//////////////////////////////////////////////////////////////////////////////////////////
// The following part contains the template
//////////////////////////////////////////////////////////////////////////////////////////%>
<%= enumDoc %>
enum <%= enumName %> {
	<%= enumLiterals %>
};

