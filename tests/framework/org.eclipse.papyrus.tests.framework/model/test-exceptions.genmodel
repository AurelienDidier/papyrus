<?xml version="1.0" encoding="UTF-8"?>
<genmodel:GenModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:genmodel="http://www.eclipse.org/uml2/2.2.0/GenModel"
    copyrightText="Copyright (c) 2015 Christian W. Damus and others.&#xA;&#xA;All rights reserved. This program and the accompanying materials&#xA;are made available under the terms of the Eclipse Public License v1.0&#xA;which accompanies this distribution, and is available at&#xA;http://www.eclipse.org/legal/epl-v10.html&#xA;&#xA;Contributors:&#xA;  Christian W. Damus - Initial API and implementation"
    modelDirectory="/org.eclipse.papyrus.tests.framework/src-gen" creationIcons="false"
    editDirectory="/org.eclipse.papyrus.tests.framework.edit/src-gen" editorDirectory="/org.eclipse.papyrus.tests.framework.editor/src-gen"
    modelPluginID="org.eclipse.papyrus.tests.framework" modelName="Test-exceptions"
    rootExtendsClass="org.eclipse.papyrus.tests.framework.exceptions.impl.TestExceptionsObject"
    codeFormatting="true" commentFormatting="true" testsDirectory="/org.eclipse.papyrus.tests.framework.tests/src-gen"
    booleanFlagsField="eFlags" booleanFlagsReservedBits="0" importerID="org.eclipse.uml2.uml.ecore.importer"
    complianceLevel="7.0" copyrightFields="false" usedGenPackages="../../org.eclipse.emf.ecore/model/Ecore.genmodel#//ecore ../../org.eclipse.gmf.codegen/models/gmfgen.genmodel#//gmfgen ../../org.eclipse.uml2.types/model/Types.genmodel#//types ../../org.eclipse.uml2.uml/model/UML.genmodel#//uml platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.genmodel#//genmodel"
    operationReflection="true" importOrganizing="true" cleanup="true" factoryMethods="true"
    pluralizedGetters="true">
  <genAnnotations source="http://www.eclipse.org/emf/2002/GenModel/importer/org.eclipse.uml2.uml.ecore.importer">
    <details key="ECORE_TAGGED_VALUES" value="PROCESS"/>
    <details key="UNION_PROPERTIES" value="REPORT"/>
    <details key="UNTYPED_PROPERTIES" value="REPORT"/>
    <details key="DUPLICATE_FEATURES" value="DISCARD"/>
    <details key="SUBSETTING_PROPERTIES" value="REPORT"/>
    <details key="VALIDATION_DELEGATES" value="PROCESS"/>
    <details key="OPPOSITE_ROLE_NAMES" value="IGNORE"/>
    <details key="COMMENTS" value="PROCESS"/>
    <details key="DUPLICATE_FEATURE_INHERITANCE" value="DISCARD"/>
    <details key="DUPLICATE_OPERATIONS" value="PROCESS"/>
    <details key="PROPERTY_DEFAULT_EXPRESSIONS" value="IGNORE"/>
    <details key="INVARIANT_CONSTRAINTS" value="PROCESS"/>
    <details key="REDEFINING_PROPERTIES" value="REPORT"/>
    <details key="ANNOTATION_DETAILS" value="PROCESS"/>
    <details key="NON_API_INVARIANTS" value="IGNORE"/>
    <details key="DUPLICATE_OPERATION_INHERITANCE" value="DISCARD"/>
    <details key="REDEFINING_OPERATIONS" value="PROCESS"/>
    <details key="INVOCATION_DELEGATES" value="IGNORE"/>
    <details key="DERIVED_FEATURES" value="PROCESS"/>
    <details key="OPERATION_BODIES" value="IGNORE"/>
    <details key="CAMEL_CASE_NAMES" value="IGNORE"/>
    <details key="SUPER_CLASS_ORDER" value="PROCESS"/>
  </genAnnotations>
  <foreignModel>test-exceptions.uml</foreignModel>
  <genPackages xsi:type="genmodel:GenPackage" prefix="Exceptions" basePackage="org.eclipse.papyrus.tests.framework"
      resource="XMI" disposableProviderFactory="true" generateExampleClass="false"
      multipleEditorPages="false" fileExtensions="testexceptions" ecorePackage="exceptions.ecore#/"
      operationsPackage="org.eclipse.papyrus.tests.framework.internal.exceptions.operations">
    <genEnums xsi:type="genmodel:GenEnum" typeSafeEnumCompatible="false" ecoreEnum="exceptions.ecore#//ForbiddenReasonKind">
      <genEnumLiterals xsi:type="genmodel:GenEnumLiteral" ecoreEnumLiteral="exceptions.ecore#//ForbiddenReasonKind/invalid"/>
      <genEnumLiterals xsi:type="genmodel:GenEnumLiteral" ecoreEnumLiteral="exceptions.ecore#//ForbiddenReasonKind/failing"/>
      <genEnumLiterals xsi:type="genmodel:GenEnumLiteral" ecoreEnumLiteral="exceptions.ecore#//ForbiddenReasonKind/unimplemented"/>
      <genEnumLiterals xsi:type="genmodel:GenEnumLiteral" ecoreEnumLiteral="exceptions.ecore#//ForbiddenReasonKind/interactive"/>
    </genEnums>
    <genEnums xsi:type="genmodel:GenEnum" typeSafeEnumCompatible="false" ecoreEnum="exceptions.ecore#//OperatorKind">
      <genEnumLiterals xsi:type="genmodel:GenEnumLiteral" ecoreEnumLiteral="exceptions.ecore#//OperatorKind/and"/>
      <genEnumLiterals xsi:type="genmodel:GenEnumLiteral" ecoreEnumLiteral="exceptions.ecore#//OperatorKind/or"/>
      <genEnumLiterals xsi:type="genmodel:GenEnumLiteral" ecoreEnumLiteral="exceptions.ecore#//OperatorKind/not"/>
    </genEnums>
    <genClasses xsi:type="genmodel:GenClass" ecoreClass="exceptions.ecore#//ForbiddenEditPartPermutation">
      <genFeatures xsi:type="genmodel:GenFeature" createChild="false" ecoreFeature="ecore:EAttribute exceptions.ecore#//ForbiddenEditPartPermutation/reasonKind"/>
      <genFeatures xsi:type="genmodel:GenFeature" createChild="false" ecoreFeature="ecore:EAttribute exceptions.ecore#//ForbiddenEditPartPermutation/reason"/>
      <genFeatures xsi:type="genmodel:GenFeature" notify="false" createChild="false"
          propertySortChoices="true" ecoreFeature="ecore:EReference exceptions.ecore#//ForbiddenEditPartPermutation/testClass"/>
      <genFeatures xsi:type="genmodel:GenFeature" property="None" children="true"
          createChild="true" propertyDescription="" propertySortChoices="true" ecoreFeature="ecore:EReference exceptions.ecore#//ForbiddenEditPartPermutation/editPart"/>
      <genOperations xsi:type="genmodel:GenOperation" ecoreOperation="exceptions.ecore#//ForbiddenEditPartPermutation/test_classes">
        <genParameters xsi:type="genmodel:GenParameter" ecoreParameter="exceptions.ecore#//ForbiddenEditPartPermutation/test_classes/diagnostics"/>
        <genParameters xsi:type="genmodel:GenParameter" ecoreParameter="exceptions.ecore#//ForbiddenEditPartPermutation/test_classes/context"/>
      </genOperations>
    </genClasses>
    <genClasses xsi:type="genmodel:GenClass" image="false" ecoreClass="exceptions.ecore#//TestConstraint">
      <genFeatures xsi:type="genmodel:GenFeature" property="None" notify="false" createChild="false"
          ecoreFeature="ecore:EReference exceptions.ecore#//TestConstraint/container"/>
      <genFeatures xsi:type="genmodel:GenFeature" createChild="false" ecoreFeature="ecore:EAttribute exceptions.ecore#//TestConstraint/omitOnFailure"/>
      <genOperations xsi:type="genmodel:GenOperation" ecoreOperation="exceptions.ecore#//TestConstraint/validate">
        <genParameters xsi:type="genmodel:GenParameter" ecoreParameter="exceptions.ecore#//TestConstraint/validate/editPart"/>
        <genParameters xsi:type="genmodel:GenParameter" ecoreParameter="exceptions.ecore#//TestConstraint/validate/testClass"/>
        <genParameters xsi:type="genmodel:GenParameter" ecoreParameter="exceptions.ecore#//TestConstraint/validate/diagnostics"/>
      </genOperations>
    </genClasses>
    <genClasses xsi:type="genmodel:GenClass" ecoreClass="exceptions.ecore#//TestExceptions">
      <genFeatures xsi:type="genmodel:GenFeature" property="None" children="true"
          createChild="true" ecoreFeature="ecore:EReference exceptions.ecore#//TestExceptions/constraint"/>
      <genOperations xsi:type="genmodel:GenOperation" ecoreOperation="exceptions.ecore#//TestExceptions/validate">
        <genParameters xsi:type="genmodel:GenParameter" ecoreParameter="exceptions.ecore#//TestExceptions/validate/editPart"/>
        <genParameters xsi:type="genmodel:GenParameter" ecoreParameter="exceptions.ecore#//TestExceptions/validate/testClass"/>
        <genParameters xsi:type="genmodel:GenParameter" ecoreParameter="exceptions.ecore#//TestExceptions/validate/diagnostics"/>
      </genOperations>
    </genClasses>
    <genClasses xsi:type="genmodel:GenClass" image="false" ecoreClass="exceptions.ecore#//EditPartSpec">
      <genFeatures xsi:type="genmodel:GenFeature" property="None" notify="false" createChild="false"
          ecoreFeature="ecore:EReference exceptions.ecore#//EditPartSpec/composite"/>
      <genOperations xsi:type="genmodel:GenOperation" ecoreOperation="exceptions.ecore#//EditPartSpec/matches">
        <genParameters xsi:type="genmodel:GenParameter" ecoreParameter="exceptions.ecore#//EditPartSpec/matches/editPart"/>
      </genOperations>
    </genClasses>
    <genClasses xsi:type="genmodel:GenClass" ecoreClass="exceptions.ecore#//CompositeEditPartSpec">
      <genFeatures xsi:type="genmodel:GenFeature" createChild="false" ecoreFeature="ecore:EAttribute exceptions.ecore#//CompositeEditPartSpec/operator"/>
      <genFeatures xsi:type="genmodel:GenFeature" property="None" children="true"
          createChild="true" ecoreFeature="ecore:EReference exceptions.ecore#//CompositeEditPartSpec/operand"/>
    </genClasses>
    <genClasses xsi:type="genmodel:GenClass" ecoreClass="exceptions.ecore#//EditPartRef">
      <genFeatures xsi:type="genmodel:GenFeature" createChild="false" propertySortChoices="true"
          ecoreFeature="ecore:EReference exceptions.ecore#//EditPartRef/editPart"/>
    </genClasses>
    <genClasses xsi:type="genmodel:GenClass" ecoreClass="exceptions.ecore#//AnyEditPart"/>
    <genClasses xsi:type="genmodel:GenClass" ecoreClass="exceptions.ecore#//ForbiddenEditPart">
      <genFeatures xsi:type="genmodel:GenFeature" property="None" children="true"
          createChild="true" ecoreFeature="ecore:EReference exceptions.ecore#//ForbiddenEditPart/editPart"/>
      <genFeatures xsi:type="genmodel:GenFeature" createChild="false" ecoreFeature="ecore:EAttribute exceptions.ecore#//ForbiddenEditPart/reason"/>
      <genFeatures xsi:type="genmodel:GenFeature" createChild="false" ecoreFeature="ecore:EAttribute exceptions.ecore#//ForbiddenEditPart/reasonKind"/>
    </genClasses>
  </genPackages>
</genmodel:GenModel>
